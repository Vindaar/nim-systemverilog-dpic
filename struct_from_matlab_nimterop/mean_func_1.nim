import nimterop/cimport
import os
from macros import getProjectPath

# static:
#   cDisableCaching()
#   cDebug()

const
  # mean_func_1_64.so is generated by running ./build_script_64.
  includePath = getProjectPath() / "matlab_export"
  soFile = includePath / "mean_func_1_64.so"
static:
  doAssert fileExists(includePath / "rtwtypes.h")
  doAssert fileExists(includePath / "mean_func_1_types.h")
  doAssert fileExists(includePath / "mean_func_1.h")
  # Put cAddSearchDir in static block:
  #  https://github.com/nimterop/nimterop/issues/122
  cAddSearchDir(includePath)

# For now, we need to cimport each included file manually:
#  https://github.com/nimterop/nimterop/issues/123
cImport(cSearchPath("rtwtypes.h"))
cImport(cSearchPath("mean_func_1_types.h"))
cImport(cSearchPath("mean_func_1.h"))

type
  DataObj* = emxArray_int32_T
  DataObjRef* = ref DataObj

  InputObj* = struct0_T
  InputObjRef* = ref InputObj

  OutputObj* = struct1_T
  OutputObjRef* = ref OutputObj

# override the mean_func_1 signature
# below does not work
# proc mean_func_1*(inp: InputObjRef; outp: OutputObjRef) {.importc, header: includePath / "mean_func_1.h".}
proc mean_func_1*(inp: InputObjRef; outp: OutputObjRef) {.importc, dynlib: soFile.}
